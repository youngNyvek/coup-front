/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/~__root'
import { Route as LobbyImport } from './routes/~lobby'
import { Route as JoinSessionImport } from './routes/~join-session'
import { Route as IndexImport } from './routes/~index'
import { Route as MatchRoomIndexImport } from './routes/~match-room/~index'

// Create/Update Routes

const LobbyRoute = LobbyImport.update({
  id: '/lobby',
  path: '/lobby',
  getParentRoute: () => rootRoute,
} as any)

const JoinSessionRoute = JoinSessionImport.update({
  id: '/join-session',
  path: '/join-session',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MatchRoomIndexRoute = MatchRoomIndexImport.update({
  id: '/match-room/',
  path: '/match-room/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/join-session': {
      id: '/join-session'
      path: '/join-session'
      fullPath: '/join-session'
      preLoaderRoute: typeof JoinSessionImport
      parentRoute: typeof rootRoute
    }
    '/lobby': {
      id: '/lobby'
      path: '/lobby'
      fullPath: '/lobby'
      preLoaderRoute: typeof LobbyImport
      parentRoute: typeof rootRoute
    }
    '/match-room/': {
      id: '/match-room/'
      path: '/match-room'
      fullPath: '/match-room'
      preLoaderRoute: typeof MatchRoomIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/join-session': typeof JoinSessionRoute
  '/lobby': typeof LobbyRoute
  '/match-room': typeof MatchRoomIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/join-session': typeof JoinSessionRoute
  '/lobby': typeof LobbyRoute
  '/match-room': typeof MatchRoomIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/join-session': typeof JoinSessionRoute
  '/lobby': typeof LobbyRoute
  '/match-room/': typeof MatchRoomIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/join-session' | '/lobby' | '/match-room'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/join-session' | '/lobby' | '/match-room'
  id: '__root__' | '/' | '/join-session' | '/lobby' | '/match-room/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  JoinSessionRoute: typeof JoinSessionRoute
  LobbyRoute: typeof LobbyRoute
  MatchRoomIndexRoute: typeof MatchRoomIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  JoinSessionRoute: JoinSessionRoute,
  LobbyRoute: LobbyRoute,
  MatchRoomIndexRoute: MatchRoomIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/join-session",
        "/lobby",
        "/match-room/"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/join-session": {
      "filePath": "~join-session.tsx"
    },
    "/lobby": {
      "filePath": "~lobby.tsx"
    },
    "/match-room/": {
      "filePath": "~match-room/~index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
